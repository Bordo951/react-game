{"version":3,"sources":["Square.js","components/StateStorage.js","components/AudioPlayer.js","components/StoredReactComponent.js","BoardGenerator.js","Board.js","pages/Game.js","pages/About.js","pages/Settings.js","pages/Statistics.js","images/rs_school_logo.svg","Main.js","Autoplay.js","index.js","Initializer.js"],"names":["Square","props","className","onClick","data-square","index","value","StateStorage","key","initialState","JSON","parse","window","localStorage","getItem","stateKey","targetKey","targetState","currentState","this","get","update","getStateValueByKey","setItem","stringify","removeItem","AudioPlayer","stateStorage","name","getStoredValueByKey","sound","Audio","volume","autoplay","StoredReactComponent","audioPlayer","setInitialState","state","setState","defaultState","React","Component","BoardGenerator","size","resultArray","newArray","i","push","j","mainDiagonal","sideDiagonal","squaresRows","generateSquaresRows","squaresRowsLength","length","generateSquaresColumns","generateSquaresDiagonals","flat","Board","level","squares","Array","fill","xIsNext","isWinner","winner","boardGenerator","event","isTrusted","playSound","slice","calculateWinner","updateStateInStorageByKey","saveStatistics","clearInterval","autoplayInterval","setTimeout","statistics","crossAmount","zeroAmount","forEach","square","mode","firstMove","totalAmount","themeCrossClassName","getStateByKey","themeZeroClassName","handleClick","map","squaresRow","rowIndex","listItem","squareIndex","renderSquare","firstEqual","lines","generateWinnerLines","lineIndexes","lineIndex","blankValues","boardView","status","boardCompletedClass","isStarted","renderBoardRows","refreshBoard","Game","startGame","bind","gameOver","saveGame","updateKeyState","setInterval","actionButtons","About","Settings","theme","xIsFirst","soundsDisabled","soundsVolume","musicDisabled","musicVolume","onChangeTheme","onChangeMode","onChangeLevel","onChangeSounds","onChangeMusic","onChangeSoundsVolume","onChangeMusicVolume","onChangeXIsFirst","target","checked","mainSound","pause","play","type","id","onChange","htmlFor","viewBox","d","min","step","max","Statistics","statistic","renderStatistics","colSpan","Main","exact","to","path","component","href","src","RSLogo","alt","Autoplay","isStepsAvailable","lastIndex","randIndex","getRandomIntInclusive","document","querySelector","click","Math","ceil","floor","random","initState","loop","initApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2798efe3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick} data-square={props.index}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Square;\r\n","export default class StateStorage {\r\n    /**\r\n     * Gets the state from the local storage or returns the initial.\r\n     *\r\n     * @param {String} key\r\n     * @param {Object} initialState\r\n     * @return {Object}\r\n     */\r\n    get(key, initialState = null) {\r\n        return {...initialState, ...JSON.parse(window.localStorage.getItem(key))} || {};\r\n    }\r\n\r\n    /**\r\n     * Gets value from local storage by key.\r\n     *\r\n     * @param {String} key\r\n     * @return {Object}\r\n     */\r\n    getStateValueByKey(key) {\r\n        return JSON.parse(window.localStorage.getItem(key));\r\n    }\r\n\r\n    /**\r\n     * Updates state in storage by key.\r\n     *\r\n     * @param {String} stateKey\r\n     * @param {String} targetKey\r\n     * @param {Object} targetState\r\n     */\r\n    updateStateInStorageByKey(stateKey, targetKey, targetState) {\r\n        let currentState = this.get(stateKey);\r\n        currentState[targetKey] = targetState;\r\n        this.update(stateKey, currentState)\r\n    }\r\n\r\n    /**\r\n     * Gets stored state value by key.\r\n     *\r\n     * @param {String} targetState\r\n     * @param {String} key\r\n     * @return {Object}\r\n     */\r\n    getStoredValueByKey(targetState, key) {\r\n        let state = this.getStateValueByKey(targetState);\r\n\r\n        return state[key];\r\n    }\r\n\r\n    /**\r\n     * Updates the local storage key with targetState object.\r\n     *\r\n     * @param {String} key\r\n     * @param {Object} targetState\r\n     */\r\n    update(key, targetState) {\r\n        window.localStorage.setItem(key, JSON.stringify(targetState));\r\n    }\r\n\r\n    /**\r\n     * Removes data from the local storage by key.\r\n     *\r\n     * @param {String} key\r\n     */\r\n    clear(key) {\r\n        window.localStorage.removeItem(key);\r\n    }\r\n}","import StateStorage from \"./StateStorage\";\r\n\r\nexport default class AudioPlayer {\r\n    constructor() {\r\n        this.stateStorage = new StateStorage();\r\n    }\r\n\r\n    playSound(name) {\r\n        if(!this.stateStorage.getStoredValueByKey('board','soundsDisabled')) {\r\n            let sound = new Audio(`sounds/${name}.mp3`);\r\n            let volume = this.stateStorage.getStoredValueByKey('board','soundsVolume');\r\n            sound.volume = volume;\r\n            sound.autoplay = true;\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport StateStorage from \"./StateStorage\";\r\nimport AudioPlayer from \"./AudioPlayer\";\r\n\r\nexport default class StoredReactComponent extends React.Component {\r\n    constructor(props, stateKey, initialState) {\r\n        super(props);\r\n        this.stateStorage = new StateStorage();\r\n        this.audioPlayer = new AudioPlayer();\r\n        this.stateKey = stateKey;\r\n        this.setInitialState(initialState);\r\n    }\r\n\r\n    /**\r\n     * Sets the initial state to React.Component by getting the state by key\r\n     * from the local storage or setting the default initial state.\r\n     *\r\n     * @param {Object} initialState\r\n     */\r\n    setInitialState(initialState) {\r\n        this.state = this.stateStorage.get(this.stateKey, initialState);\r\n    }\r\n\r\n    /**\r\n     * Updates the React.Component state and save state to the storage.\r\n     *\r\n     * @param {Object} targetState\r\n     */\r\n    updateState(targetState) {\r\n        this.setState(targetState, () => {\r\n            this.stateStorage.update(this.stateKey, targetState)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Updates the React.Component state by key and save state to the storage by key.\r\n     *\r\n     * @param {String} targetKey\r\n     * @param {Object} targetState\r\n     */\r\n    updateKeyState(targetKey, targetState) {\r\n        this.setState({targetKey: targetState}, () => {\r\n            let currentState = this.stateStorage.get(this.stateKey);\r\n            currentState[targetKey] = targetState;\r\n            this.stateStorage.update(this.stateKey, currentState)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Removes the React.Component state by key.\r\n     *\r\n     * @param {String} targetKey\r\n     */\r\n    removeStateByKey(targetKey) {\r\n        let currentState = this.stateStorage.get(this.stateKey);\r\n            delete currentState[targetKey];\r\n        this.stateStorage.update(this.stateKey, currentState);\r\n    }\r\n\r\n    /**\r\n     * Gets the stored state by key.\r\n     *\r\n     * @param {String} targetKey\r\n     * @param {Object} defaultState\r\n     */\r\n    getStateByKey(targetKey, defaultState = null) {\r\n        let currentState = this.stateStorage.get(this.stateKey);\r\n        return currentState[targetKey] ?? defaultState;\r\n    }\r\n}","export default class BoardGenerator {\r\n    /**\r\n     * Generates row indexes for the game board.\r\n     *\r\n     * @param {number} size\r\n     * @return {Array}\r\n     */\r\n    generateSquaresRows(size) {\r\n        let resultArray = [];\r\n        let newArray = [];\r\n        \r\n        for (let i = 1; i <= size * size; i++) {\r\n            newArray.push(i - 1);\r\n            if (i % size === 0) {\r\n                resultArray.push(newArray);\r\n                newArray = [];\r\n            }\r\n        }\r\n\r\n        return resultArray;\r\n    }\r\n\r\n    /**\r\n     * Generates columns indexes for the game board.\r\n     *\r\n     * @param {number} size\r\n     * @return {Array}\r\n     */\r\n    generateSquaresColumns(size) {\r\n        let resultArray = [];\r\n        let newArray = [];\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            for (let j = 0; j < size; j++) {\r\n                newArray.push(j * size + i);\r\n            }\r\n            resultArray.push(newArray);\r\n            newArray = [];\r\n        }\r\n\r\n        return resultArray;\r\n    }\r\n\r\n    /**\r\n     * Generates diagonals indexes for the game board.\r\n     *\r\n     * @param {number} size\r\n     * @return {Array}\r\n     */\r\n    generateSquaresDiagonals(size) {\r\n        let mainDiagonal = [];\r\n        let sideDiagonal = [];\r\n        let squaresRows = this.generateSquaresRows(size);\r\n        let squaresRowsLength = squaresRows.length;\r\n\r\n        for (let i = 0; i < squaresRowsLength; i++) {\r\n            mainDiagonal.push(squaresRows[i][i]);\r\n            sideDiagonal.push(squaresRows[i][squaresRowsLength - i - 1]);\r\n        }\r\n\r\n        return [mainDiagonal, sideDiagonal];\r\n    }\r\n\r\n    /**\r\n     * Generates winner lines indexes for the game board.\r\n     *\r\n     * @param {Number} size\r\n     * @return {Array}\r\n     */\r\n    generateWinnerLines(size) {\r\n        let resultArray = [];\r\n\r\n        resultArray.push(this.generateSquaresRows(size));\r\n        resultArray.push(this.generateSquaresColumns(size));\r\n        resultArray.push(this.generateSquaresDiagonals(size));\r\n\r\n        return resultArray.flat();\r\n    }\r\n}","import React from 'react';\r\nimport Square from './Square';\r\nimport StoredReactComponent from \"./components/StoredReactComponent\";\r\nimport BoardGenerator from \"./BoardGenerator\";\r\n\r\nclass Board extends StoredReactComponent {\r\n    constructor(props) {\r\n        super(props, 'board', {\r\n            level: 3,\r\n            squares: Array(9).fill(null),\r\n            xIsNext: \"true\",\r\n            isWinner: false,\r\n            winner: null\r\n        });\r\n        this.boardGenerator = new BoardGenerator();\r\n    }\r\n\r\n    handleClick(event, i) {\r\n        if (this.state.isWinner) {\r\n            if (event.isTrusted) {\r\n                this.audioPlayer.playSound('mimo');\r\n            }\r\n        } else {\r\n            this.audioPlayer.playSound('click');\r\n        }\r\n\r\n        const squares = this.state.squares.slice();\r\n\r\n        if (this.calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext === \"true\" ? 'X' : 'O';\r\n        this.state.xIsNext = this.state.xIsNext === \"true\" ? \"false\" : \"true\";\r\n\r\n        let xIsNext = this.state.xIsNext;\r\n\r\n        this.stateStorage.updateStateInStorageByKey(this.stateKey, 'squares', squares);\r\n        this.stateStorage.updateStateInStorageByKey(this.stateKey, 'xIsNext', xIsNext);\r\n        this.setState({\r\n            squares: squares,\r\n            xIsNext: xIsNext\r\n        });\r\n\r\n        this.state.winner = this.calculateWinner(squares);\r\n        this.stateStorage.updateStateInStorageByKey(this.stateKey, 'winner', this.state.winner);\r\n\r\n        if (this.state.winner) {\r\n            this.state.isWinner = true;\r\n            this.stateStorage.updateStateInStorageByKey(this.stateKey, 'isWinner', this.state.isWinner);\r\n            this.audioPlayer.playSound('congratulations');\r\n            this.saveStatistics();\r\n            clearInterval(window.autoplayInterval);\r\n        }\r\n\r\n        let mode = this.stateStorage.getStoredValueByKey('board', 'mode');\r\n        if (mode === \"intellect\" && !this.state.isWinner) {\r\n            if (event.isTrusted) {\r\n                setTimeout(function () {\r\n                    window.autoplay.autoplay()\r\n                }, 600);\r\n            }\r\n        }\r\n    }\r\n\r\n    saveStatistics() {\r\n        let statistics = JSON.parse(window.localStorage.getItem('statistics')) ?? [];\r\n        let squares = this.stateStorage.getStoredValueByKey('board', 'squares') ?? [];\r\n        let crossAmount = 0;\r\n        let zeroAmount = 0;\r\n\r\n        squares.forEach(square => {\r\n                if (square != null) {\r\n                    if (square === \"X\") {\r\n                        crossAmount++;\r\n                    }\r\n                    if (square === \"O\") {\r\n                        zeroAmount++;\r\n                    }\r\n                }\r\n            }\r\n        );\r\n\r\n        statistics.push({\r\n            winner: this.state.winner,\r\n            mode: this.stateStorage.getStoredValueByKey('board', 'mode'),\r\n            level: this.state.level,\r\n            firstMove: this.stateStorage.getStoredValueByKey('board', 'xIsFirst') === \"true\" ? \"X\" : \"O\",\r\n            totalAmount: crossAmount + zeroAmount,\r\n            crossAmount: crossAmount,\r\n            zeroAmount: zeroAmount\r\n        });\r\n\r\n        window.localStorage.setItem('statistics', JSON.stringify(statistics));\r\n    }\r\n\r\n    renderSquare(i, index) {\r\n        let value;\r\n        let themeCrossClassName = 'chips-cross__' + this.getStateByKey('theme', 'classic');\r\n        let themeZeroClassName = 'chips-zero__' + this.getStateByKey('theme', 'classic');\r\n\r\n        if (this.state.squares[i] === 'X') {\r\n            value = <div className={themeCrossClassName}></div>;\r\n        }\r\n\r\n        if (this.state.squares[i] === 'O') {\r\n            value = <div className={themeZeroClassName}></div>;\r\n        }\r\n\r\n        return <Square\r\n            value={value}\r\n            onClick={(event) => this.handleClick(event, i)}\r\n            key={index}\r\n            index={i}\r\n        />;\r\n    }\r\n\r\n    renderBoardRows() {\r\n        let squaresRows = this.boardGenerator.generateSquaresRows(this.state.level);\r\n\r\n        return squaresRows.map((squaresRow, rowIndex) => {\r\n            let listItem = squaresRow.map((square, squareIndex) =>\r\n                this.renderSquare(square, squareIndex)\r\n            );\r\n\r\n            return <div className=\"board-row\" key={rowIndex}>\r\n                {listItem}\r\n            </div>;\r\n        });\r\n    }\r\n\r\n    calculateWinner(squares) {\r\n        const lines = this.boardGenerator.generateWinnerLines(this.state.level);\r\n        let firstEqual;\r\n        let isWinner;\r\n\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const lineIndexes = lines[i];\r\n            firstEqual = squares[lineIndexes[0]];\r\n            isWinner = true;\r\n            lineIndexes.forEach(function (lineIndex) {\r\n                let nextEqual = squares[lineIndex];\r\n                if (nextEqual !== firstEqual) {\r\n                    isWinner = false;\r\n                }\r\n            });\r\n\r\n            if (isWinner) {\r\n                return firstEqual;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    refreshBoard() {\r\n        let blankValues = Array(this.state.level * this.state.level).fill(null);\r\n        this.stateStorage.updateStateInStorageByKey(this.stateKey, 'squares', blankValues);\r\n        this.state.squares = blankValues;\r\n        this.state.isWinner = false;\r\n        this.state.winner = null;\r\n        this.state.xIsNext = this.stateStorage.getStoredValueByKey('board', 'xIsFirst');\r\n    }\r\n\r\n    render() {\r\n        let boardView = <h3 className=\"status\">Are you ready to play the 'Tic-Tac-Toe' game?</h3>;\r\n        let status = this.state.isWinner ? 'Won ' + this.state.winner : 'Next move: ' + (this.state.xIsNext === \"true\" ? 'X' : 'O');\r\n        let boardCompletedClass = this.state.isWinner ? 'board won' : 'board';\r\n\r\n        if (this.props.isStarted) {\r\n            boardView = <div>\r\n                <h3 className=\"status\">{status}</h3>\r\n                <div className={boardCompletedClass}>\r\n                    {this.renderBoardRows()}\r\n                </div>\r\n            </div>;\r\n        } else {\r\n            this.refreshBoard();\r\n        }\r\n\r\n        return (<div>\r\n                {boardView}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport Board from '../Board';\r\nimport StoredReactComponent from \"../components/StoredReactComponent\";\r\n\r\nclass Game extends StoredReactComponent {\r\n    constructor(props) {\r\n        super(props, 'board', {\r\n            level: 3,\r\n            isStarted: false\r\n        });\r\n\r\n        this.startGame = this.startGame.bind(this);\r\n        this.gameOver = this.gameOver.bind(this);\r\n        this.saveGame = this.saveGame.bind(this);\r\n    }\r\n\r\n    startGame() {\r\n        let level = this.state.level;\r\n        let mode = this.stateStorage.getStoredValueByKey('board', 'mode');\r\n\r\n        this.updateKeyState('isStarted', true);\r\n        this.updateKeyState('squares', Array(level * level).fill(null));\r\n        this.setState({\r\n            isStarted: true\r\n        });\r\n        this.audioPlayer.playSound('start-game');\r\n\r\n        if (mode === \"autoplay\") {\r\n            window.autoplayInterval = setInterval(function () {\r\n                window.autoplay.autoplay();\r\n            }, 600);\r\n        }\r\n    }\r\n\r\n    gameOver() {\r\n        this.updateKeyState('isStarted', false);\r\n        this.setState({\r\n            isStarted: false\r\n        });\r\n        this.audioPlayer.playSound('game-over');\r\n        this.stateStorage.updateStateInStorageByKey(this.stateKey,'winner', null);\r\n        this.stateStorage.updateStateInStorageByKey(this.stateKey,'isWinner', false);\r\n\r\n        clearInterval(window.autoplayInterval);\r\n    }\r\n\r\n    saveGame() {\r\n        this.updateKeyState('isStarted', false);\r\n        this.setState({\r\n            isStarted: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let actionButtons;\r\n\r\n        if (this.state.isStarted) {\r\n            actionButtons = <div className=\"game-actions\">\r\n                <button className=\"game__reset-btn\" onClick={this.gameOver}>Game over</button>\r\n            </div>\r\n        } else {\r\n            actionButtons = <div className=\"game-actions\">\r\n                <button className=\"game__reset-btn\" onClick={this.startGame}>New game</button>\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"game\">\r\n                    <div className=\"game-board\">\r\n                        <Board isStarted={this.state.isStarted} level={this.state.level}/>\r\n                    </div>\r\n                    {actionButtons}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"about\">\r\n                <h2 className=\"about__title\">About the game</h2>\r\n                <div className=\"about__content\">\r\n                    <p className=\"about__description\">\r\n                        Tic-tac-toe is a logic game between two opponents on a 3x3 or larger square field. The game can be customized.\r\n                        On the settings page, you can:\r\n                    </p>\r\n                    <ol className=\"about__list\">\r\n                        <li className=\"about__item\">Choose who will go first: \"X\" or \"O\";</li>\r\n                        <li className=\"about__item\">On the \"Game Mode\" tab, you can choose who you want to play with:\r\n                            <ul>\r\n                                <li>with a friend, with a virtual opponent, or start autoplay</li>\r\n                                <li>with a virtual opponent, or start autoplay</li>\r\n                                <li>start autoplay</li>\r\n                            </ul>\r\n                        </li>\r\n                        <li className=\"about__item\">In the \"Game Sounds\" section, you can adjust the volume of the background music or turn on/off it.</li>\r\n                        <li className=\"about__item\">If you are bored with the \"classic\" tic-tac-toe, on the \"Chips style\" tab you can change the theme of the chips.</li>\r\n                        <li className=\"about__item\">Think you're a tic-tac-toe pro? You can increase the difficulty level in the \"Levels\" section by selecting a field of a suitable size:\r\n                            <ul>\r\n                                <li>5 х 5</li>\r\n                                <li>7 х 7</li>\r\n                                <li>9 х 9</li>\r\n                            </ul>\r\n                        </li>\r\n                    </ol>\r\n                    <p className=\"about__description\">\r\n                        <b>Attention!</b> All the specified settings will be implemented only after the launch of <b>the New game</b>.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport StoredReactComponent from \"../components/StoredReactComponent\";\r\n\r\nclass Settings extends StoredReactComponent {\r\n    constructor(props) {\r\n        super(props, 'board', {\r\n            mode: \"players\",\r\n            theme: \"classic\",\r\n            level: \"3\",\r\n            xIsFirst: \"true\",\r\n            soundsDisabled: false,\r\n            soundsVolume: \"0.7\",\r\n            musicDisabled: true,\r\n            musicVolume: \"0.5\"\r\n        });\r\n\r\n        this.onChangeTheme = this.onChangeTheme.bind(this);\r\n        this.onChangeMode = this.onChangeMode.bind(this);\r\n        this.onChangeLevel = this.onChangeLevel.bind(this);\r\n        this.onChangeSounds = this.onChangeSounds.bind(this);\r\n        this.onChangeMusic = this.onChangeMusic.bind(this);\r\n        this.onChangeSoundsVolume = this.onChangeSoundsVolume.bind(this);\r\n        this.onChangeMusicVolume = this.onChangeMusicVolume.bind(this);\r\n        this.onChangeXIsFirst = this.onChangeXIsFirst.bind(this);\r\n    }\r\n\r\n    onChangeXIsFirst(event) {\r\n        this.updateKeyState('xIsFirst', event.target.value);\r\n        this.setState({\r\n            xIsFirst: event.target.value\r\n        });\r\n        this.audioPlayer.playSound('settings-click');\r\n    }\r\n\r\n    onChangeSounds(event) {\r\n        this.updateKeyState('soundsDisabled', event.target.checked);\r\n        this.setState({\r\n            soundsDisabled: event.target.checked\r\n        });\r\n        this.audioPlayer.playSound('settings-click');\r\n    }\r\n\r\n    onChangeSoundsVolume(event) {\r\n        this.updateKeyState('soundsVolume', event.target.value);\r\n        this.setState({\r\n            soundsVolume: event.target.value\r\n        });\r\n    }\r\n\r\n    onChangeMusic(event) {\r\n        this.updateKeyState('musicDisabled', event.target.checked);\r\n        this.setState({\r\n            musicDisabled: event.target.checked\r\n        });\r\n        this.audioPlayer.playSound('settings-click');\r\n\r\n        if (event.target.checked) {\r\n            window.mainSound.pause();\r\n        } else {\r\n            window.mainSound.play();\r\n        }\r\n    }\r\n\r\n    onChangeMusicVolume(event) {\r\n        this.updateKeyState('musicVolume', event.target.value);\r\n        this.setState({\r\n            musicVolume: event.target.value\r\n        });\r\n        window.mainSound.volume = event.target.value;\r\n    }\r\n\r\n    onChangeTheme(event) {\r\n        this.updateKeyState('theme', event.target.value);\r\n        this.setState({\r\n            theme: event.target.value\r\n        });\r\n        this.audioPlayer.playSound('settings-click');\r\n    }\r\n\r\n    onChangeMode(event) {\r\n        let value = event.target.value;\r\n\r\n        this.updateKeyState('mode', value);\r\n        this.updateKeyState('isStarted', false);\r\n        this.setState({\r\n            mode: value\r\n        });\r\n        this.audioPlayer.playSound('settings-click');\r\n    }\r\n\r\n    onChangeLevel(event) {\r\n        let value = event.target.value;\r\n\r\n        this.updateKeyState('level', value);\r\n        this.updateKeyState('isStarted', false);\r\n        this.updateKeyState('squares', Array(value * value).fill(null));\r\n        this.setState({\r\n            level: value\r\n        });\r\n        this.audioPlayer.playSound('settings-click');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"settings\">\r\n                <h2 className=\"settings__title\">Make your choice...</h2>\r\n                <div className=\"settings__container\">\r\n                    <div className=\"settings__item-wrapper_long\">\r\n                        <h4 className=\"settings__item-title_long\">Whose move is the first?</h4>\r\n                        <input className=\"radio-btn\" type=\"radio\" id=\"xIsFirst-1\" name=\"xIsFirst\" value=\"true\"\r\n                               checked={this.state.xIsFirst === \"true\"} onChange={this.onChangeXIsFirst}/>\r\n                        <label htmlFor=\"xIsFirst-1\">Cross</label>\r\n                        <input className=\"radio-btn\" type=\"radio\" id=\"xIsFirst-2\" name=\"xIsFirst\" value=\"false\"\r\n                               checked={this.state.xIsFirst === \"false\"} onChange={this.onChangeXIsFirst}/>\r\n                        <label htmlFor=\"xIsFirst-2\">Zero</label>\r\n                    </div>\r\n                    <div className=\"settings__item-wrapper\">\r\n                        <h3 className=\"settings__item-title\">Game Sounds</h3>\r\n                        <div className=\"sounds__wrapper\">\r\n                            <div className=\"sounds__title\">Sounds</div>\r\n                            {/*From https://codepen.io/aaroniker/pen/zYYKxey*/}\r\n                            <div>\r\n                                <label className=\"volume\">\r\n                                    <input type=\"checkbox\" name=\"sounds-disabled\" checked={this.state.soundsDisabled}\r\n                                           onChange={this.onChangeSounds}/>\r\n                                    <svg viewBox=\"0 0 108 96\">\r\n                                        <path\r\n                                            d=\"M7,28 L35,28 L35,28 L59,8 L59,88 L35,68 L7,68 C4.790861,68 3,66.209139 3,64 L3,32 C3,29.790861 4.790861,28 7,28 Z\"></path>\r\n                                        <path\r\n                                            d=\"M79,62 C83,57.3333333 85,52.6666667 85,48 C85,43.3333333 83,38.6666667 79,34 L49,3\"></path>\r\n                                        <path\r\n                                            d=\"M95,69 C101.666667,61.6666667 105,54.3333333 105,47 C105,39.6666667 101.666667,32.3333333 95,25 L75.5,6 L49,33\"></path>\r\n                                    </svg>\r\n                                </label>\r\n                            </div>\r\n                            <div>\r\n                                <input className=\"volume-toggle\" type=\"range\" id=\"sounds-volume\" name=\"sounds-volume\"\r\n                                       value={this.state.soundsVolume} onChange={this.onChangeSoundsVolume} min=\"0\"\r\n                                       step=\"0.01\" max=\"0.7\"/>\r\n                                <label className=\"volume-name\" htmlFor=\"volume\">Volume</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sounds__wrapper\">\r\n                            <div className=\"sounds__title\">Music</div>\r\n                            {/*From https://codepen.io/aaroniker/pen/zYYKxey*/}\r\n                            <div>\r\n                                <label className=\"volume\">\r\n                                    <input type=\"checkbox\" name=\"music-disabled\" checked={this.state.musicDisabled}\r\n                                           onChange={this.onChangeMusic}/>\r\n                                    <svg viewBox=\"0 0 108 96\">\r\n                                        <path\r\n                                            d=\"M7,28 L35,28 L35,28 L59,8 L59,88 L35,68 L7,68 C4.790861,68 3,66.209139 3,64 L3,32 C3,29.790861 4.790861,28 7,28 Z\"></path>\r\n                                        <path\r\n                                            d=\"M79,62 C83,57.3333333 85,52.6666667 85,48 C85,43.3333333 83,38.6666667 79,34 L49,3\"></path>\r\n                                        <path\r\n                                            d=\"M95,69 C101.666667,61.6666667 105,54.3333333 105,47 C105,39.6666667 101.666667,32.3333333 95,25 L75.5,6 L49,33\"></path>\r\n                                    </svg>\r\n                                </label>\r\n                            </div>\r\n                            <div>\r\n                                <input className=\"volume-toggle\" type=\"range\" id=\"music-volume\" name=\"music-volume\"\r\n                                       value={this.state.musicVolume} onChange={this.onChangeMusicVolume} min=\"0\"\r\n                                       step=\"0.01\" max=\"0.7\"/>\r\n                                <label className=\"volume-name\" htmlFor=\"volume\">Volume</label>\r\n                            </div>\r\n                        </div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div className=\"settings__item-wrapper\">\r\n                        <h3 className=\"settings__item-title\">Game Mode</h3>\r\n                        <div className=\"radio\">\r\n                            <input className=\"radio-btn\" type=\"radio\" id=\"variant-1\" name=\"mode\" value=\"intellect\"\r\n                                   checked={this.state.mode === \"intellect\"} onChange={this.onChangeMode}/>\r\n                            <label htmlFor=\"variant-1\">Intellectual opponent</label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                            <input className=\"radio-btn\" type=\"radio\" id=\"variant-2\" name=\"mode\" value=\"players\"\r\n                                   checked={this.state.mode === \"players\"} onChange={this.onChangeMode}/>\r\n                            <label htmlFor=\"variant-2\">2 players</label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                            <input className=\"radio-btn\" type=\"radio\" id=\"variant-3\" name=\"mode\" value=\"autoplay\"\r\n                                   checked={this.state.mode === \"autoplay\"} onChange={this.onChangeMode}/>\r\n                            <label htmlFor=\"variant-3\">Autoplay</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"settings__item-wrapper\">\r\n                        <h3 className=\"settings__item-title\">Chips style</h3>\r\n                        <div className=\"radio\">\r\n                            <input className=\"radio-btn\" type=\"radio\" id=\"theme-1\" name=\"theme\" value=\"classic\"\r\n                                   checked={this.state.theme === \"classic\"} onChange={this.onChangeTheme}/>\r\n                            <label htmlFor=\"theme-1\">Сlassic: X vs O</label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                            <input className=\"radio-btn\" type=\"radio\" id=\"theme-2\" name=\"theme\" value=\"sushi\"\r\n                                   checked={this.state.theme === \"sushi\"} onChange={this.onChangeTheme}/>\r\n                            <label htmlFor=\"theme-2\">Sushi: rolls vs nigiri</label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                            <input className=\"radio-btn\" type=\"radio\" id=\"theme-3\" name=\"theme\" value=\"matrix\"\r\n                                   checked={this.state.theme === \"matrix\"} onChange={this.onChangeTheme}/>\r\n                            <label htmlFor=\"theme-3\">The Matrix: your choice, Neo: red or blue?</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"settings__item-wrapper\">\r\n                        <h3 className=\"settings__item-title\">Levels</h3>\r\n                        <div className=\"radio\">\r\n                            <input className=\"radio-btn\" type=\"radio\" id=\"level-1\" name=\"level\" value=\"3\"\r\n                                   checked={this.state.level === \"3\"} onChange={this.onChangeLevel}/>\r\n                            <label htmlFor=\"level-1\">3 x 3</label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                            <input className=\"radio-btn\" type=\"radio\" id=\"level-2\" name=\"level\" value=\"5\"\r\n                                   checked={this.state.level === \"5\"} onChange={this.onChangeLevel}/>\r\n                            <label htmlFor=\"level-2\">5 x 5</label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                            <input className=\"radio-btn\" type=\"radio\" id=\"level-3\" name=\"level\" value=\"7\"\r\n                                   checked={this.state.level === \"7\"} onChange={this.onChangeLevel}/>\r\n                            <label htmlFor=\"level-3\">7 x 7</label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                            <input className=\"radio-btn\" type=\"radio\" id=\"level-4\" name=\"level\" value=\"9\"\r\n                                   checked={this.state.level === \"9\"} onChange={this.onChangeLevel}/>\r\n                            <label htmlFor=\"level-4\">9 x 9</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\n\r\nclass Statistics extends React.Component {\r\n    renderStatistics() {\r\n        let statistics = JSON.parse(window.localStorage.getItem('statistics')) ?? [];\r\n\r\n        return statistics.map((statistic, rowIndex) => {\r\n            return <tr className=\"statistics__table-item\">\r\n                <td>{statistic.winner}</td>\r\n                <td>{statistic.mode}</td>\r\n                <td>{statistic.level}</td>\r\n                <td>{statistic.firstMove}</td>\r\n                <td>{statistic.crossAmount}</td>\r\n                <td>{statistic.zeroAmount}</td>\r\n                <td>{statistic.totalAmount}</td>\r\n            </tr>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let statistics = this.renderStatistics();\r\n\r\n        if(!statistics.length) {\r\n            statistics = <tr className=\"statistics__table-item\">\r\n                <td colSpan={7}>You need to play at least once to see the statistics on the screen.</td>\r\n            </tr>\r\n        }\r\n\r\n        return (\r\n            <div className=\"statistics\">\r\n                <table className=\"statistics__table\">\r\n                    <caption className=\"statistics__table-title\">Statistics</caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"statistics__table-head\">Winner</th>\r\n                            <th className=\"statistics__table-head\">Game mode</th>\r\n                            <th className=\"statistics__table-head\">Level</th>\r\n                            <th className=\"statistics__table-head\">First Move</th>\r\n                            <th className=\"statistics__table-head\">X total</th>\r\n                            <th className=\"statistics__table-head\">O total</th>\r\n                            <th className=\"statistics__table-head\">Total Steps</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {statistics}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Statistics;\r\n","export default __webpack_public_path__ + \"./static/media/rs_school_logo.74173745.svg\";","import React from 'react';\r\nimport {Route, NavLink, HashRouter} from \"react-router-dom\";\r\nimport Game from \"./pages/Game\";\r\nimport About from \"./pages/About\";\r\nimport Settings from \"./pages/Settings\";\r\nimport Statistics from \"./pages/Statistics\";\r\nimport RSLogo from \"./images/rs_school_logo.svg\";\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <div className=\"container\">\r\n                    <h1>Tic-Tac-Toe</h1>\r\n                    <ul className=\"navigation\">\r\n                        <li className=\"navigation__item\"><NavLink className=\"navigation__link\" exact to=\"/\">Game</NavLink></li>\r\n                        <li className=\"navigation__item\"><NavLink className=\"navigation__link\" to=\"/about\">About</NavLink></li>\r\n                        <li className=\"navigation__item\"><NavLink className=\"navigation__link\" to=\"/settings\">Settings</NavLink></li>\r\n                        <li className=\"navigation__item\"><NavLink className=\"navigation__link\" to=\"/statistics\">Statistics</NavLink></li>\r\n                    </ul>\r\n                    <div className=\"content\">\r\n                        <Route exact path=\"/\" component={Game}/>\r\n                        <Route path=\"/about\" component={About}/>\r\n                        <Route path=\"/settings\" component={Settings}/>\r\n                        <Route path=\"/statistics\" component={Statistics}/>\r\n                    </div>\r\n                </div>\r\n                <footer className=\"footer\">\r\n                    <div className=\"footer__logo-wrapper\">\r\n                        <a className=\"footer__logo-link\" href=\"https://rs.school/js/\">\r\n                            <img className=\"footer__logo\" src={RSLogo} alt={RSLogo}/>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"footer__author-wrapper\">\r\n                        <a className=\"footer__author-link\" href=\"https://github.com/Bordo951\">Selivanova Irina</a>\r\n                    </div>\r\n                    <div className=\"footer__year\">2021</div>\r\n                </footer>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import StateStorage from \"./components/StateStorage\";\r\n\r\nexport default class Autoplay {\r\n    constructor() {\r\n        this.stateStorage = new StateStorage()\r\n    }\r\n\r\n    autoplay() {\r\n        let squares = this.stateStorage.getStoredValueByKey('board', 'squares');\r\n        let isWinner = this.stateStorage.getStoredValueByKey('board', 'isWinner');\r\n        let isStepsAvailable = false;\r\n        let firstIndex = 0;\r\n        let lastIndex = squares.length - 1;\r\n        let randIndex = this.getRandomIntInclusive(firstIndex, lastIndex);\r\n\r\n\r\n        for (let i = 0; i < squares.length; i++) {\r\n            if (squares[i] === null && !isWinner) {\r\n                isStepsAvailable = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        while (isStepsAvailable && squares[randIndex] !== null) {\r\n            randIndex = this.getRandomIntInclusive(firstIndex, lastIndex);\r\n        }\r\n\r\n        if (randIndex !== null) {\r\n            document.querySelector(\"[data-square='\" + randIndex + \"']\").click();\r\n        }\r\n\r\n        randIndex = null;\r\n    }\r\n\r\n    getRandomIntInclusive(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport Main from \"./Main\";\r\nimport Initializer from \"./Initializer\";\r\n\r\nlet initializer = new Initializer();\r\ninitializer.initApp();\r\n\r\nReactDOM.render(\r\n    <Main/>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n\r\n","import StateStorage from \"./components/StateStorage\";\r\nimport Autoplay from \"./Autoplay\";\r\n\r\nexport default class Initializer {\r\n    constructor() {\r\n        this.stateStorage = new StateStorage();\r\n    }\r\n\r\n    initState = {\r\n        mode: \"players\",\r\n        theme: \"classic\",\r\n        isStarted: false,\r\n        level: \"3\",\r\n        squares: Array(9).fill(null),\r\n        xIsFirst: \"true\",\r\n        soundsDisabled: false,\r\n        soundsVolume: \"0.7\",\r\n        musicDisabled: false,\r\n        musicVolume: \"0.5\",\r\n        isWinner: false,\r\n        winner: null\r\n    };\r\n\r\n    initApp() {\r\n        let board = window.localStorage.getItem('board');\r\n\r\n        if (!board) {\r\n            window.localStorage.setItem('board', JSON.stringify(this.initState));\r\n        }\r\n\r\n        if (!window.mainSound) {\r\n            let sound = new Audio(`sounds/main.mp3`);\r\n\r\n            sound.loop = true;\r\n            sound.volume = +this.stateStorage.getStoredValueByKey('board', 'musicVolume');\r\n\r\n            if (!this.stateStorage.getStoredValueByKey('board', 'musicDisabled')) {\r\n                sound.autoplay = true;\r\n                sound.play();\r\n            }\r\n\r\n            window.mainSound = sound;\r\n        }\r\n\r\n        window.autoplay = new Autoplay();\r\n    }\r\n}"],"sourceRoot":""}